<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US" lang="en-US">

<head>
    <!-- Basic Page Needs -->
    <meta charset="utf-8">
    <title>Transha Stayss - Admin Packages</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!-- Theme Style -->
    <link rel="stylesheet" type="text/css" href="admin-css/animate.min.css">
    <link rel="stylesheet" type="text/css" href="admin-css/animation.css">
    <link rel="stylesheet" type="text/css" href="admin-css/bootstrap.css">
    <link rel="stylesheet" type="text/css" href="admin-css/bootstrap-select.min.css">
    <link rel="stylesheet" type="text/css" href="admin-css/styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">


    <!-- Font -->
    <link rel="stylesheet" href="admin-font/fonts.css">

    <!-- Icon -->
    <link rel="stylesheet" href="admin-icon/style.css">

    <!-- Favicon and Touch Icons  -->
    <link rel="shortcut icon" href="img/transha/logo.jpeg">
    <link rel="apple-touch-icon-precomposed" href="img/transha/logo.jpeg">

</head>

<body class="body">

    <!-- #wrapper -->
    <div id="wrapper">
        <!-- #page -->
        <div id="page" class="">
            <!-- layout-wrap -->
            <div class="layout-wrap loader-off">
                <!-- preload -->
                <div id="preload" class="preload-container">
                    <div class="preloading">
                        <span></span>
                    </div>
                </div>
                <!-- /preload -->
                <!-- section-menu-left -->
                <div class="section-menu-left">
                    <div class="box-logo">
                        <a href="/dashboard" id="site-logo-inner">
                            <img style="width:60px;" id="logo_header" alt="logo" src="img/transha/logo.png"
                                data-light="img/transha/logo.png" data-dark="img/transha/logo.png">
                        </a>
                        <div class="button-show-hide">
                            <i class="icon-chevron-left"></i>
                        </div>
                    </div>
                    <div class="section-menu-left-wrap">
                        <div class="center">
                            <div class="center-item">
                                <ul>
                                    <li class="menu-item">
                                        <a href="/dashboard">
                                            <div class="icon">
                                                <svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                                                    xmlns="http://www.w3.org/2000/svg">
                                                    <path fill-rule="evenodd" clip-rule="evenodd"
                                                        d="M12.2652 3.57566C12.1187 3.42921 11.8813 3.42921 11.7348 3.57566L5.25 10.0605V19.8748C5.25 20.0819 5.41789 20.2498 5.625 20.2498H9V16.1248C9 15.0893 9.83947 14.2498 10.875 14.2498H13.125C14.1605 14.2498 15 15.0893 15 16.1248V20.2498H18.375C18.5821 20.2498 18.75 20.0819 18.75 19.8748V10.0605L12.2652 3.57566ZM20.25 11.5605L21.2197 12.5302C21.5126 12.8231 21.9874 12.8231 22.2803 12.5302C22.5732 12.2373 22.5732 11.7624 22.2803 11.4695L13.3258 2.51499C12.5936 1.78276 11.4064 1.78276 10.6742 2.515L1.71967 11.4695C1.42678 11.7624 1.42678 12.2373 1.71967 12.5302C2.01256 12.8231 2.48744 12.8231 2.78033 12.5302L3.75 11.5605V19.8748C3.75 20.9104 4.58947 21.7498 5.625 21.7498H18.375C19.4105 21.7498 20.25 20.9104 20.25 19.8748V11.5605ZM13.5 20.2498H10.5V16.1248C10.5 15.9177 10.6679 15.7498 10.875 15.7498H13.125C13.3321 15.7498 13.5 15.9177 13.5 16.1248V20.2498Z"
                                                        fill="#111111" />
                                                </svg>
                                            </div>
                                            <div class="text">Admin Dashboard</div>
                                        </a>
                                    </li>
                                    <li class="menu-item active">
                                        <a href="/admin-resort" class="menu-item-button">
                                            <div class="icon"><i class="icon-file-plus"></i></div>
                                            <div class="text">Resort Management</div>
                                        </a>

                                    </li>
                                    <li class="menu-item">
                                        <a href="/admin-pg" class="menu-item-button">
                                            <div class="icon"><i class="icon-layers"></i></div>
                                            <div class="text">pg Management</div>
                                        </a>

                                    </li>
                                    <li class="menu-item  ">
                                        <a href="/admin-booking" class="menu-item-button">
                                            <div class="icon"><i class="icon-layers"></i></div>
                                            <div class="text">Booking Management</div>
                                        </a>

                                    </li>

                                    <li class="menu-item">
                                        <a href="/admin-testimonials" class="menu-item-button">
                                            <div class="icon"><i class="fa fa-star-o"></i></div>
                                            <div class="text">Testimonials Management</div>
                                        </a>
                                    </li>

                                    <li class="menu-item">
                                        <a href="/admin-blogs" class="menu-item-button">
                                            <div class="icon"><i class="icon-book-open"></i></div>
                                            <div class="text">Blogs Management</div>
                                        </a>
                                    </li>
                                    <li class="menu-item">
                                        <a href="/logout">
                                            <div class="icon">
                                                <svg width="24" height="22" viewBox="0 0 20 20" fill="none"
                                                    xmlns="http://www.w3.org/2000/svg">
                                                    <path
                                                        d="M8.125 18.6875C8.125 18.903 8.0394 19.1097 7.88702 19.262C7.73465 19.4144 7.52799 19.5 7.3125 19.5H1.625C1.19402 19.5 0.780698 19.3288 0.475951 19.024C0.171205 18.7193 0 18.306 0 17.875V1.625C0 1.19402 0.171205 0.780698 0.475951 0.475951C0.780698 0.171205 1.19402 0 1.625 0H7.3125C7.52799 0 7.73465 0.0856026 7.88702 0.237976C8.0394 0.390349 8.125 0.597012 8.125 0.8125C8.125 1.02799 8.0394 1.23465 7.88702 1.38702C7.73465 1.5394 7.52799 1.625 7.3125 1.625H1.625V17.875H7.3125C7.52799 17.875 7.73465 17.9606 7.88702 18.113C8.0394 18.2653 8.125 18.472 8.125 18.6875ZM19.2623 9.17516L15.1998 5.11266C15.0474 4.9602 14.8406 4.87455 14.625 4.87455C14.4094 4.87455 14.2026 4.9602 14.0502 5.11266C13.8977 5.26511 13.812 5.47189 13.812 5.6875C13.812 5.90311 13.8977 6.10989 14.0502 6.26234L16.7263 8.9375H7.3125C7.09701 8.9375 6.89035 9.0231 6.73798 9.17548C6.5856 9.32785 6.5 9.53451 6.5 9.75C6.5 9.96549 6.5856 10.1722 6.73798 10.3245C6.89035 10.4769 7.09701 10.5625 7.3125 10.5625H16.7263L14.0502 13.2377C13.8977 13.3901 13.812 13.5969 13.812 13.8125C13.812 14.0281 13.8977 14.2349 14.0502 14.3873C14.2026 14.5398 14.4094 14.6255 14.625 14.6255C14.8406 14.6255 15.0474 14.5398 15.1998 14.3873L19.2623 10.3248C19.3379 10.2494 19.3978 10.1598 19.4387 10.0611C19.4796 9.9625 19.5006 9.85678 19.5006 9.75C19.5006 9.64322 19.4796 9.5375 19.4387 9.43886C19.3978 9.34023 19.3379 9.25062 19.2623 9.17516Z"
                                                        fill="#111111" />
                                                </svg>
                                            </div>
                                            <div class="text">Log out</div>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /section-menu-left -->
                <!-- section-content-right -->
                <div class="section-content-right">
                    <!-- header-dashboard -->
                    <div class="header-dashboard">
                        <div class="wrap">
                            <div class="header-left">
                                <a href="/dashboard">
                                    <img style="width: 50px;" id="logo_header_mobile" alt="" src="img/transha/logo.png"
                                        data-light="img/transha/logo.png" data-dark="img/transha/logo.png">
                                </a>
                                <div class="button-show-hide">
                                    <i class="icon-chevron-left"></i>
                                </div>

                            </div>
                            <div class="header-grid">
                                <div class="header-item button-dark-light">
                                    <i class="icon-moon"></i>
                                </div>


                                <div class="header-item button-zoom-maximize">
                                    <div class="">
                                        <i class="icon-maximize"></i>
                                    </div>
                                </div>
                                <div class="popup-wrap user type-header">
                                    <div class="dropdown">
                                        <button class="btn btn-secondary dropdown-toggle" type="button"
                                            id="dropdownMenuButton3" data-bs-toggle="dropdown" aria-expanded="false">
                                            <span class="header-user wg-user">
                                                <span class="image">
                                                    <img src="admin-images/avatar/user-1.png" alt="">
                                                </span>
                                                <span class="flex flex-column">
                                                    <span class="body-text text-main-dark">Transha Stayss</span>
                                                    <span class="text-tiny">Admin</span>
                                                </span>
                                            </span>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end has-content"
                                            aria-labelledby="dropdownMenuButton3">

                                            <li>
                                                <a href="#" class="user-item">
                                                    <div class="icon">
                                                        <i class="icon-headphones"></i>
                                                    </div>
                                                    <div class="body-title-2">Support</div>
                                                </a>
                                            </li>
                                            <li>
                                                <a href="/logout" class="user-item">
                                                    <div class="icon">
                                                        <i class="icon-log-out"></i>
                                                    </div>
                                                    <div class="body-title-2">Log out</div>
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /header-dashboard -->
                    <!-- main-content -->
                    <div class="main-content">
                        <!-- main-content-wrap -->
                        <div class="main-content-inner">
                            <!-- main-content-wrap -->
                            <div class="main-content-wrap">
                                <div class="flex items-center flex-wrap justify-between gap20 mb-30">
                                    <h3>Resort & Room Management</h3>
                                    <ul class="breadcrumbs flex items-center flex-wrap justify-start gap10">
                                        <li>
                                            <a href="/dashboard">
                                                <div class="text-tiny">Dashboard</div>
                                            </a>
                                        </li>
                                        <li>
                                            <i class="icon-chevron-right"></i>
                                        </li>
                                        <li>
                                            <a href="#">
                                                <div class="text-tiny">Resort</div>
                                            </a>
                                        </li>
                                        <li>
                                            <i class="icon-chevron-right"></i>
                                        </li>
                                        <li>
                                            <div class="text-tiny">Room Management</div>
                                        </li>
                                    </ul>
                                </div>

                                <div class="wg-box">
                                    <div class="title-box">
                                        <i class="icon-home"></i>
                                        <div class="body-text">
                                            Manage all resorts and their rooms. Expand a resort for details, edit or
                                            status toggle. Create, edit and delete resorts or rooms.
                                        </div>
                                    </div>

                                    <div class="flex items-center justify-between gap10 flex-wrap mb-20">
                                        <div class="wg-filter flex-grow">
                                            <div class="show">
                                                <div class="text-tiny">Showing</div>
                                                <div class="select">
                                                    <select id="limit-select">
                                                        <option value="10">10</option>
                                                        <option value="20">20</option>
                                                        <option value="30">30</option>
                                                    </select>
                                                </div>
                                                <div class="text-tiny">entries</div>
                                            </div>
                                            <div class="form-search">
                                                <input type="text" id="search-input"
                                                    placeholder="Search by resort, room name, type, or amenities...">
                                                <button id="search-btn"><i class="icon-search"></i></button>
                                            </div>
                                        </div>
                                        <a class="tf-button style-1 w208" href="#" id="add-resort-room-btn">
                                            <i class="icon-plus"></i>Add Resort Room
                                        </a>
                                        <a class="tf-button style-1 w208" href="#" id="add-resort-btn">
                                            <i class="icon-plus"></i>Add Resort
                                        </a>
                                    </div>

                                    <div class="accordion" id="resortsAccordion">
                                        <% if (resorts && resorts.length) { %>
                                            <% resorts.forEach(function(resort, resortIdx) { %>
                                                <div class="card mb-3 shadow-sm" data-resort-id="<%= resort._id %>">
                                                    <div class="card-header bg-light d-flex justify-content-between align-items-center"
                                                        id="heading-<%= resort._id %>">
                                                        <span>
                                                            <% if (resort.images && resort.images.length) { %>
                                                                <img src="<%= resort.images[0] %>" alt="Resort Image"
                                                                    style="width:40px;height:40px;object-fit:cover;border-radius:6px;margin-right:8px;">
                                                                <% } else { %>
                                                                    <span class="icon-home text-secondary"
                                                                        style="font-size:1.6rem;margin-right:8px;"></span>
                                                                    <% } %>
                                                                        <strong>
                                                                            <%= resort.name %>
                                                                        </strong>
                                                                        <span class="badge rounded-pill bg-info ms-2">
                                                                            <%= resort.city %>
                                                                        </span>
                                                                        <% if (!resort.isActive) { %>
                                                                            <span
                                                                                class="badge rounded-pill bg-secondary ms-1">Inactive</span>
                                                                            <% } else { %>
                                                                                <span
                                                                                    class="badge rounded-pill bg-success ms-1">Active</span>
                                                                                <% } %>
                                                        </span>
                                                        <div>
                                                            <button
                                                                class="btn btn-xs btn-outline-secondary toggle-resort-btn"
                                                                data-resort-id="<%= resort._id %>"
                                                                data-active="<%= resort.isActive %>"
                                                                title="Toggle Resort Status">
                                                                <% if (resort.isActive) { %>
                                                                    <i class="icon-eye-off"></i>
                                                                    <% } else { %>
                                                                        <i class="icon-eye"></i>
                                                                        <% } %>
                                                            </button>
                                                            <button
                                                                class="btn btn-xs btn-outline-primary edit-resort-btn"
                                                                data-resort-id="<%= resort._id %>" title="Edit Resort">
                                                                <i class="icon-edit"></i>
                                                            </button>
                                                            <button
                                                                class="btn btn-xs btn-outline-danger delete-resort-btn"
                                                                data-resort-id="<%= resort._id %>"
                                                                title="Delete Resort">
                                                                <i class="icon-trash"></i>
                                                            </button>
                                                            <button class="btn btn-link ms-2" type="button"
                                                                data-bs-toggle="collapse"
                                                                data-bs-target="#collapse-<%= resort._id %>"
                                                                aria-expanded="false"
                                                                aria-controls="collapse-<%= resort._id %>">
                                                                <i class="icon-chevron-down"></i>
                                                            </button>
                                                        </div>
                                                    </div>
                                                    <div id="collapse-<%= resort._id %>" class="collapse"
                                                        data-bs-parent="#resortsAccordion">
                                                        <div class="card-body">
                                                            <div class="mb-2"><strong>Address:</strong>
                                                                <%= resort.address || '-' %>, <%= resort.state %>, <%=
                                                                            resort.country %> (<%= resort.pincode %>)
                                                            </div>
                                                            <div class="mb-2"><strong>Contact:</strong>
                                                                <%= resort.contactNumber %> | <%= resort.email %>
                                                            </div>
                                                            <div class="mb-2"><strong>Amenities:</strong>
                                                                <% if (resort.amenities && resort.amenities.length) { %>
                                                                    <%= resort.amenities.join(", ") %>
                                                                <% } else { %>
                                                                    <span>N/A</span>
                                                                <% } %>
                                                            </div>
                                                            <div class=" mb-2"><strong>Rules:</strong>
                                                                        <% if (resort.rules && resort.rules.length) { %>
                                                                            <%= resort.rules.join(", ") %>
                                                                <% } else { %>
                                                                    <span>N/A</span>
                                                                <% } %>
                                                            </div>
                                                            <div class=" mb-2"><strong>Google Map:</strong>
                                                                                <% if(resort.googleMapLink) { %>
                                                                                    <a href="<%= resort.googleMapLink %>"
                                                                                        target="_blank"
                                                                                        style="color:#1677FF; text-decoration: underline;">Open
                                                                                        Map</a>
                                                                                    <% } else { %>
                                                                                        <span
                                                                                            class="text-muted">N/A</span>
                                                                                        <% } %>
                                                            </div>
                                                            <div class="mb-2"><strong>Rating:</strong>
                                                                <% if (typeof resort.rating !== 'undefined' && resort.rating !== null) { %>
                                                                    <span class="badge rounded-pill bg-warning text-dark">
                                                                        <%= resort.rating %> <i class="icon-star"></i>
                                                                    </span>
                                                                <% } else { %>
                                                                    <span class="badge rounded-pill bg-secondary text-light">
                                                                        0 <i class="icon-star"></i>
                                                                    </span>
                                                                <% } %>
                                                            </div>
                                                            <div class="mb-2">
                                                                <strong>Check-in:</strong>
                                                                <%= resort.checkInTime || "12:00 PM" %>
                                                                    &nbsp;&#183;&nbsp;
                                                                    <strong>Check-out:</strong>
                                                                    <%= resort.checkOutTime || "11:00 AM" %>
                                                            </div>
                                                            <div class="mb-3">
                                                                <span class="ms-2 text-muted"><strong>Rooms:</strong>
                                                                    <%= resort.totalRooms || (resort.rooms ?
                                                                        resort.rooms.length : 0) %>
                                                                </span>
                                                            </div>

                                                            <% if (resort.rooms && resort.rooms.length) { %>
                                                                <div class="row g-3">
                                                                    <% resort.rooms.forEach(function(room, roomIdx) { %>
                                                                        <div class="col-12 col-md-6 col-lg-4">
                                                                            <div class="card shadow-sm border mb-2 room-card" data-room-id="<%= room._id %>">
                                                                                <% if (room.images && room.images.length) { %>
                                                                                    <div class="room-image-w" style="position:relative;">
                                                                                        <img src="<%= room.images[0] %>" alt="Room Image" class="card-img-top" style="object-fit:cover; width:100%; height:170px; border-radius:10px 10px 0 0;">
                                                                                        <% if(room.images.length > 1) { %>
                                                                                        <span class="badge bg-dark position-absolute" style="top:8px;right:8px;opacity:0.9;">
                                                                                            +<%= room.images.length-1 %>
                                                                                        </span>
                                                                                        <% } %>
                                                                                    </div>
                                                                                <% } else { %>
                                                                                    <div class="room-image-w d-flex align-items-center justify-content-center bg-light" style="height:170px;border-radius:10px 10px 0 0;">
                                                                                        <span class="text-muted small">No Image</span>
                                                                                    </div>
                                                                                <% } %>
                                                                                <div class="card-body p-3">
                                                                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                                                                        <div>
                                                                                            <span class="badge bg-secondary me-2"><%= roomIdx+1 %></span>
                                                                                            <span class="fw-bold">Room #<%= room.roomNumber %></span>
                                                                                        </div>
                                                                                        <div>
                                                                                            <% if (room.status==='Available') { %>
                                                                                                <span class="badge bg-success">Available</span>
                                                                                            <% } else if (room.status==='Booked') { %>
                                                                                                <span class="badge bg-warning text-dark">Booked</span>
                                                                                            <% } else if (room.status==='Maintenance') { %>
                                                                                                <span class="badge bg-danger">Maintenance</span>
                                                                                            <% } else { %>
                                                                                                <span class="badge bg-secondary"><%= room.status %></span>
                                                                                            <% } %>
                                                                                        </div>
                                                                                    </div>
                        
                                                                                    <div class="mb-1 small text-muted">
                                                                                        <strong>Name:</strong> <%= room.name ? room.name : '-' %>
                                                                                    </div>
                                                                                    <div class="mb-1 small">
                                                                                        <strong>Type:</strong> <%= room.roomType %>
                                                                                        <span class="mx-2">|</span>
                                                                                        <strong>Bed:</strong> <%= room.bedType || '-' %>
                                                                                    </div>
                                                                                    <div class="mb-1 small">
                                                                                        <strong>Capacity:</strong> <%= room.capacity %>
                                                                                        <span class="mx-2">|</span>
                                                                                        <strong>Price:</strong> ₹<%= room.pricePerNight %>/night
                                                                                    </div>
                                                                                    <div class="mb-1 small">
                                                                                        <strong>Amenities:</strong>
                                                                                        <% if (room.amenities && room.amenities.length) { %>
                                                                                            <%= room.amenities.slice(0,3).join(', ') %>
                                                                                            <% if (room.amenities.length > 3) { %>
                                                                                                <span class="text-muted">+<%= room.amenities.length-3 %> more</span>
                                                                                            <% } %>
                                                                                        <% } else { %>
                                                                                            <span class="text-muted">N/A</span>
                                                                                        <% } %>
                                                                                    </div>
                                                                                    <div class="d-flex gap-2 mt-2">
                                                                                        <button class="btn btn-xs btn-outline-secondary toggle-room-btn"
                                                                                            data-room-id="<%= room._id %>" data-status="<%= room.status %>"
                                                                                            title="Toggle Room Availability">
                                                                                            <% if (room.status === 'Available') { %>
                                                                                                <i class="icon-eye-off"></i>
                                                                                            <% } else { %>
                                                                                                <i class="icon-eye"></i>
                                                                                            <% } %>
                                                                                        </button>
                                                                                        <button class="btn btn-xs btn-outline-primary edit-room-btn"
                                                                                            data-room-id="<%= room._id %>"
                                                                                            title="Edit Room"><i class="icon-edit"></i></button>
                                                                                        <button class="btn btn-xs btn-outline-danger delete-room-btn"
                                                                                            data-room-id="<%= room._id %>"
                                                                                            title="Delete Room"><i class="icon-trash"></i></button>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    <% }); %>
                                                                </div>
                                                            <% } else { %>
                                                                <div class="text-muted my-2">No rooms found for this resort.</div>
                                                            <% } %>
                                                            <div class="mt-3">
                                                                <a href="#"
                                                                    class="btn btn-sm btn-primary add-room-btn"
                                                                    data-resort-id="<%= resort._id %>">
                                                                    <i class="icon-plus"></i> Add Room
                                                                </a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            <% }) %>
                                        <% } else { %>
                                            <div class="alert alert-warning">No resorts available.</div>
                                        <% } %>
                                    </div>
                                    <div class="divider"></div>
                                    <div class="flex items-center justify-between flex-wrap gap10">
                                        <div class="text-tiny" id="showing-entries">
                                            Showing <%= resorts && resorts.length ? resorts.length : 0 %> resorts
                                        </div>
                                        <!-- Pagination spot -->
                                    </div>
                                </div>
                                <!-- Resort & Room modals will be appended here by JS -->
                                <div id="admin-resort-modals"></div>
                            </div>

                            <script>
                                // Resort & Room JS
                                (function () {

                                    // Resort CRUD (unchanged)
                                    document.getElementById('add-resort-btn')?.addEventListener('click', function (e) {
                                        e.preventDefault();
                                        showResortFormModal();
                                    });

                                    document.querySelectorAll('.edit-resort-btn').forEach(function (btn) {
                                        btn.addEventListener('click', function () {
                                            const resortId = this.getAttribute('data-resort-id');
                                            fetch('/resort/' + resortId)
                                                .then(r => r.json())
                                                .then(data => {
                                                    if (data && data.resort) {
                                                        showResortFormModal(data.resort);
                                                    } else {
                                                        alert('Unable to fetch resort.');
                                                    }
                                                });
                                        });
                                    });

                                    document.querySelectorAll('.delete-resort-btn').forEach(function (btn) {
                                        btn.addEventListener('click', function () {
                                            if (!confirm('Are you sure you want to delete this resort?')) return;
                                            const resortId = this.getAttribute('data-resort-id');
                                            fetch('/resort/' + resortId, { method: 'DELETE' })
                                                .then(r => {
                                                    if (r.ok) location.reload();
                                                    else return r.json().then(j => { throw new Error(j.message); });
                                                })
                                                .catch(e => alert('Error deleting resort: ' + (e.message || '')));
                                        });
                                    });

                                    document.querySelectorAll('.toggle-resort-btn').forEach(function (btn) {
                                        btn.addEventListener('click', function () {
                                            const resortId = this.getAttribute('data-resort-id');
                                            fetch('/resort/' + resortId + '/toggle', { method: 'PATCH' })
                                                .then(r => {
                                                    if (r.ok) location.reload();
                                                    else return r.json().then(j => { throw new Error(j.message); });
                                                })
                                                .catch(e => alert('Error toggling resort status: ' + (e.message || '')));
                                        });
                                    });

                                    // Room CRUD
                                    document.querySelectorAll('.add-room-btn').forEach(function (btn) {
                                        btn.addEventListener('click', function (e) {
                                            e.preventDefault();
                                            const resortId = this.getAttribute('data-resort-id') || '';
                                            showRoomFormModal({}, resortId);
                                        });
                                    });
                                    document.getElementById('add-resort-room-btn')?.addEventListener('click', function (e) {
                                        e.preventDefault();
                                        showRoomFormModal({}, '');
                                    });

                                    document.querySelectorAll('.edit-room-btn').forEach(function (btn) {
                                        btn.addEventListener('click', function () {
                                            const roomId = this.getAttribute('data-room-id');
                                            // Use backend endpoint: GET /resort/room/:id
                                            fetch('/resort/room/' + roomId)
                                                .then(r => r.json())
                                                .then(data => {
                                                    if (data && data.room) {
                                                        showRoomFormModal(data.room, data.room.property);
                                                    } else {
                                                        alert('Unable to fetch room.');
                                                    }
                                                });
                                        });
                                    });

                                    document.querySelectorAll('.delete-room-btn').forEach(function (btn) {
                                        btn.addEventListener('click', function () {
                                            if (!confirm('Are you sure you want to delete this room?')) return;
                                            const roomId = this.getAttribute('data-room-id');
                                            // Use backend endpoint: DELETE /resort/room/:id
                                            fetch('/resort/room/' + roomId, { method: 'DELETE' })
                                                .then(r => {
                                                    if (r.ok) location.reload();
                                                    else return r.json().then(j => { throw new Error(j.message); });
                                                })
                                                .catch(e => alert('Error deleting room: ' + (e.message || '')));
                                        });
                                    });

                                    document.querySelectorAll('.toggle-room-btn').forEach(function (btn) {
                                        btn.addEventListener('click', function () {
                                            const roomId = this.getAttribute('data-room-id');

                                            // Hotfix for PATCH /resort/room/:id/toggle sending empty req.body
                                            // --> We explicitly send a 'dummy' payload, so req.body is at least {}
                                            fetch('/resort/room/' + roomId + '/toggle', { 
                                                method: 'PATCH',
                                                headers: {
                                                    // Inform backend we're sending JSON; but the backend may not care
                                                    'Content-Type': 'application/json'
                                                },
                                                body: JSON.stringify({ toggle: true })
                                            })
                                                .then(r => {
                                                    if (r.ok) location.reload();
                                                    else return r.json().then(j => { throw new Error(j.message); });
                                                })
                                                .catch(e => alert('Error toggling room status: ' + (e.message || '')));
                                        });
                                    });

                                    // Resort Modal (not changed)
                                    window.showResortFormModal = function (resort = {}) {
                                        const getArray = arr => Array.isArray(arr) ? arr : [];
                                        const amenitiesArr = getArray(resort.amenities);
                                        const rulesArr = getArray(resort.rules);
                                        const imagesArr = getArray(resort.images);

                                        let html = `
        <div class="modal fade" id="resortFormModal" tabindex="-1">
            <div class="modal-dialog modal-xl">
            <form id="resortForm" autocomplete="off" enctype="multipart/form-data">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">${resort._id ? 'Edit Resort Property' : 'Add Resort Property'}</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body" style="max-height:72vh;overflow-y:auto;">
                        <input type="hidden" name="id" value="${resort._id || ''}">
                        <div class="row g-3">
                            <div class="col-md-6 mb-0">
                                <label class="form-label fw-bold">Name *</label>
                                <input type="text" name="name" class="form-control" value="${resort.name || ''}" required>
                            </div>
                            <div class="col-md-6 mb-0">
                                <label class="form-label fw-bold">Slug</label>
                                <input type="text" name="slug" class="form-control" value="${resort.slug || ''}" placeholder="resort-slug">
                            </div>
                            <div class="col-md-12">
                                <label class="form-label fw-bold">Description</label>
                                <textarea name="description" class="form-control" rows="2" maxlength="500">${resort.description || ''}</textarea>
                            </div>
                            <div class="col-md-8 col-lg-9">
                                <label class="form-label fw-bold">Address</label>
                                <input type="text" name="address" class="form-control" value="${resort.address || ''}">
                            </div>
                            <div class="col-md-4 col-lg-3">
                                <label class="form-label fw-bold">Pincode</label>
                                <input type="text" name="pincode" class="form-control" value="${resort.pincode || ''}">
                            </div>
                            <div class="col-md-4">
                                <label class="form-label fw-bold">City</label>
                                <input type="text" name="city" class="form-control" value="${resort.city || ''}">
                            </div>
                            <div class="col-md-4">
                                <label class="form-label fw-bold">State</label>
                                <input type="text" name="state" class="form-control" value="${resort.state || ''}">
                            </div>
                            <div class="col-md-4">
                                <label class="form-label fw-bold">Country</label>
                                <input type="text" name="country" class="form-control" value="${resort.country || ''}">
                            </div>
                            <div class="col-md-6">
                                <label class="form-label fw-bold">Contact Number</label>
                                <input type="tel" name="contactNumber" class="form-control" value="${resort.contactNumber || ''}">
                            </div>
                            <div class="col-md-6">
                                <label class="form-label fw-bold">Email</label>
                                <input type="email" name="email" class="form-control" value="${resort.email || ''}">
                            </div>
                            <div class="col-md-12">
                                <label class="form-label fw-bold">Google Map Link</label>
                                <input type="url" name="googleMapLink" class="form-control" value="${resort.googleMapLink || ''}">
                            </div>
                            <div class="col-md-12">
                                <label class="form-label fw-bold">Property Images</label>
                                <div id="image-list-box" class="mb-2"></div>
                                <div class="input-group mb-2 gap-2" style="flex-wrap:nowrap">
                                    <input type="file" class="form-control" id="image-file-input" multiple accept="image/*" name="images">
                                </div>
                                <div class="text-tiny text-muted mt-1">Upload images (drag to arrange; max 10).</div>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label fw-bold">Amenities
                                    <button class="btn btn-xs btn-success ms-1 py-0 px-1" type="button" id="add-amenity-btn">
                                        <i class="icon-plus"></i> <span style="font-size:90%">Add</span>
                                    </button>
                                </label>
                                <div id="amenities-list" class="mb-1"></div>
                                <div class="input-group mt-1">
                                    <input type="text" class="form-control" id="amenity-input" placeholder="Type amenity and click +">
                                    <button class="btn btn-primary" type="button" id="add-amenity-input-btn"><b>+</b></button>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label fw-bold">Rules
                                    <button class="btn btn-xs btn-warning ms-1 py-0 px-1" type="button" id="add-rule-btn">
                                        <i class="icon-plus"></i> <span style="font-size:90%">Add</span>
                                    </button>
                                </label>
                                <div id="rules-list" class="mb-1"></div>
                                <div class="input-group mt-1">
                                    <input type="text" class="form-control" id="rule-input" placeholder="Type rule and click +">
                                    <button class="btn btn-warning" type="button" id="add-rule-input-btn"><b>+</b></button>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label fw-bold">Check-in Time</label>
                                <input type="text" name="checkInTime" class="form-control" value="${resort.checkInTime || '12:00 PM'}" placeholder="Ex: 12:00 PM">
                            </div>
                            <div class="col-md-4">
                                <label class="form-label fw-bold">Check-out Time</label>
                                <input type="text" name="checkOutTime" class="form-control" value="${resort.checkOutTime || '11:00 AM'}" placeholder="Ex: 11:00 AM">
                            </div>
                            <div class="col-md-4">
                                <label class="form-label fw-bold">Status</label>
                                <select name="isActive" class="form-select">
                                    <option value="true" ${resort.isActive ? 'selected' : ''}>Active</option>
                                    <option value="false" ${resort.isActive === false ? 'selected' : ''}>Inactive</option>
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label fw-bold">Total Rooms</label>
                                <input type="number" name="totalRooms" class="form-control" min="0" value="${resort.totalRooms != null ? resort.totalRooms : ''}">
                            </div>
                            <div class="col-md-6">
                                <label class="form-label fw-bold">Rating</label>
                                <input type="number" name="rating" class="form-control" min="0" max="5" step="0.01" value="${resort.rating != null ? resort.rating : ''}">
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button id="resortFormSubmitBtn" type="submit" class="btn btn-primary">${resort._id ? 'Update' : 'Create'}</button>
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                        <span id="resortFormLoading" style="display:none;margin-left:8px;">
                            <span class="spinner-border spinner-border-sm align-middle" role="status" aria-hidden="true"></span>
                            <span class="ms-1 align-middle">Processing...</span>
                        </span>
                    </div>
                </div>
            </form>
            </div>
        </div>
        `;

                                        document.getElementById('admin-resort-modals').innerHTML = html;

                                        var resortModal = new bootstrap.Modal(document.getElementById('resortFormModal'));
                                        resortModal.show();

                                        // Dynamic fields
                                        // images: string[] (for edits) or File[] (for new upload, or object {file, preview})
                                        let amenities = amenitiesArr.slice();
                                        let rules = rulesArr.slice();

                                        // For image rendering and arranging
                                        let _imagesInitial =
                                            imagesArr
                                                .map(url => typeof url === "object" && url.path ? url.path : url)
                                                .filter(Boolean);

                                        let images = _imagesInitial.slice();

                                        function renderImages() {
                                            const wrap = document.getElementById('image-list-box');
                                            if (!wrap) return;
                                            wrap.innerHTML = images.length === 0 ? '<div class="text-tiny text-muted">No images added.</div>' : '';
                                            images.forEach((img, idx) => {
                                                let src = "";
                                                if (typeof img === 'string') src = img;
                                                else if (img instanceof File) src = img.__previewDataUrl || "";
                                                else if (img && typeof img === 'object' && img.preview) src = img.preview;
                                                wrap.innerHTML += `
                    <div class="d-flex align-items-center mb-2 resort-img-item" style="gap:7px" draggable="true" data-idx="${idx}">
                        <img src="${src}" style="width:60px;height:38px;object-fit:cover; border-radius:4px;border:1px solid #ddd;">
                        <div>
                            <button class="btn btn-xs btn-light move-img-up" data-idx="${idx}" title="Move up"><i class="icon-arrow-up"></i></button>
                            <button class="btn btn-xs btn-light move-img-down" data-idx="${idx}" title="Move down"><i class="icon-arrow-down"></i></button>
                            <button class="btn btn-xs btn-danger remove-image" data-idx="${idx}" title="Remove"><i class="icon-trash"></i></button>
                        </div>
                    </div>
                `;
                                            });
                                            // Drag & drop reorder
                                            Array.from(wrap.querySelectorAll('.resort-img-item')).forEach(el => {
                                                el.ondragstart = function (e) {
                                                    e.dataTransfer.setData("image-drag", el.dataset.idx);
                                                };
                                                el.ondragover = function (e) { e.preventDefault(); };
                                                el.ondrop = function (e) {
                                                    e.preventDefault();
                                                    let from = Number(e.dataTransfer.getData("image-drag"));
                                                    let to = Number(el.dataset.idx);
                                                    if (from !== to) {
                                                        let temp = images[from];
                                                        images.splice(from, 1);
                                                        images.splice(to, 0, temp);
                                                        renderImages();
                                                    }
                                                }
                                            });
                                            wrap.querySelectorAll('.move-img-up').forEach(btn => {
                                                btn.onclick = () => {
                                                    let i = Number(btn.dataset.idx);
                                                    if (i > 0) [images[i - 1], images[i]] = [images[i], images[i - 1]];
                                                    renderImages();
                                                }
                                            });
                                            wrap.querySelectorAll('.move-img-down').forEach(btn => {
                                                btn.onclick = () => {
                                                    let i = Number(btn.dataset.idx);
                                                    if (i < images.length - 1) [images[i], images[i + 1]] = [images[i + 1], images[i]];
                                                    renderImages();
                                                }
                                            });
                                            wrap.querySelectorAll('.remove-image').forEach(btn => {
                                                btn.onclick = () => { 
                                                    images.splice(Number(btn.dataset.idx), 1); 
                                                    renderImages(); 
                                                };
                                            });
                                        }

                                        // On image input, append files to images array, keeping preview DataURL for each file
                                        document.getElementById('image-file-input').addEventListener('change', function () {
                                            let files = Array.from(this.files || []);
                                            let fileCount = files.length + images.filter(img => typeof img !== 'object' || img instanceof File || img.preview).length;
                                            if (fileCount > 10) {
                                                alert("A maximum of 10 images allowed.");
                                                return;
                                            }
                                            let pendingPreview = files.length;
                                            files.forEach(file => {
                                                file.__previewDataUrl = ""; // for preview
                                                let reader = new FileReader();
                                                reader.onload = function (e) {
                                                    file.__previewDataUrl = e.target.result;
                                                    images.push(file);
                                                    pendingPreview--;
                                                    if (pendingPreview === 0) renderImages();
                                                };
                                                reader.readAsDataURL(file);
                                            });
                                            if (!files.length) renderImages();
                                            this.value = ""; // clear input
                                        });

                                        function renderAmenities() {
                                            let out = amenities.length === 0 ? '<span class="badge bg-light text-muted text-tiny me-1">No amenities yet</span>' : '';
                                            amenities.forEach((a, i) => {
                                                out += `<span class="badge rounded-pill bg-success-subtle text-success me-1 mb-1">
                    ${a}
                    <button type="button" class="btn-close ms-1 remove-amenity-btn" data-idx="${i}" title="Remove"></button>
            </span>`;
                                            });
                                            document.getElementById('amenities-list').innerHTML = out;
                                            document.querySelectorAll('.remove-amenity-btn').forEach(btn => {
                                                btn.onclick = () => { amenities.splice(Number(btn.dataset.idx), 1); renderAmenities(); }
                                            });
                                        }
                                        function renderRules() {
                                            let out = rules.length === 0 ? '<span class="badge bg-light text-muted text-tiny me-1">No rules yet</span>' : '';
                                            rules.forEach((r, i) => {
                                                out += `<span class="badge rounded-pill bg-warning-subtle text-warning-emphasis me-1 mb-1">
                    ${r}
                    <button type="button" class="btn-close ms-1 remove-rule-btn" data-idx="${i}" title="Remove"></button>
            </span>`;
                                            });
                                            document.getElementById('rules-list').innerHTML = out;
                                            document.querySelectorAll('.remove-rule-btn').forEach(btn => {
                                                btn.onclick = () => { rules.splice(Number(btn.dataset.idx), 1); renderRules(); }
                                            });
                                        }
                                        renderImages(); renderAmenities(); renderRules();

                                        // Amenity input
                                        function focusAmenityInput() { document.getElementById('amenity-input').focus(); }
                                        document.getElementById('add-amenity-btn').onclick = focusAmenityInput;
                                        document.getElementById('add-amenity-input-btn').onclick = function () {
                                            let val = document.getElementById('amenity-input').value.trim();
                                            if (val) {
                                                amenities.push(val); document.getElementById('amenity-input').value = '';
                                                renderAmenities();
                                                focusAmenityInput();
                                            }
                                        };
                                        document.getElementById('amenity-input').addEventListener('keydown', function (e) {
                                            if (e.key === 'Enter') { e.preventDefault(); document.getElementById('add-amenity-input-btn').click(); }
                                        });
                                        // Rule input
                                        function focusRuleInput() { document.getElementById('rule-input').focus(); }
                                        document.getElementById('add-rule-btn').onclick = focusRuleInput;
                                        document.getElementById('add-rule-input-btn').onclick = function () {
                                            let val = document.getElementById('rule-input').value.trim();
                                            if (val) {
                                                rules.push(val); document.getElementById('rule-input').value = '';
                                                renderRules();
                                                focusRuleInput();
                                            }
                                        };
                                        document.getElementById('rule-input').addEventListener('keydown', function (e) {
                                            if (e.key === 'Enter') { e.preventDefault(); document.getElementById('add-rule-input-btn').click(); }
                                        });

                                        // Resort Form Submit: Properly append up to 10 images (File or URL string)
                                        document.getElementById('resortForm').onsubmit = function (e) {
                                            e.preventDefault();

                                            var submitBtn = document.getElementById('resortFormSubmitBtn');
                                            var loadingSpan = document.getElementById('resortFormLoading');
                                            if (submitBtn) submitBtn.disabled = true;
                                            if (loadingSpan) loadingSpan.style.display = '';

                                            let fd = new FormData();
                                            // Form: gather normal fields
                                            let inputs = this.elements;
                                            for (let i = 0; i < inputs.length; ++i) {
                                                let inp = inputs[i];
                                                if (inp.name && inp.type !== 'file') {
                                                    fd.append(inp.name, inp.value);
                                                }
                                            }
                                            // Amenities/rules
                                            amenities.forEach(a => fd.append('amenities', a));
                                            rules.forEach(r => fd.append('rules', r));
                                            // Images: Only append max 10
                                            let totalPushed = 0;
                                            for (let j = 0; j < images.length && totalPushed < 10; ++j) {
                                                let img = images[j];
                                                if (img instanceof File) fd.append('images', img);
                                                else if (typeof img === 'string') fd.append('existingImages', img);
                                                totalPushed++;
                                            }
                                            // Fix for isActive select
                                            if (fd.has('isActive')) {
                                                let v = fd.get('isActive');
                                                fd.set('isActive', v === 'true' ? 'true' : 'false');
                                            }
                                            // POST/PUT logic
                                            let reqType = resort._id ? 'PUT' : 'POST';
                                            let url = resort._id ? `/resort/${resort._id}` : '/resort/create';
                                            fetch(url, {
                                                method: reqType,
                                                body: fd
                                            })
                                            .then(async r => {
                                                if (r.ok) { resortModal.hide(); location.reload(); }
                                                else {
                                                    let data;
                                                    try {
                                                        data = await r.json();
                                                        alert('Error: ' + (data.message || r.status));
                                                    } catch (ex) {
                                                        alert('Error: ' + r.status);
                                                    }
                                                }
                                            })
                                            .catch(ex => alert('Error: ' + (ex.message || '')))
                                            .finally(() => {
                                                if (submitBtn) submitBtn.disabled = false;
                                                if (loadingSpan) loadingSpan.style.display = 'none';
                                            });
                                        };

                                        document.getElementById('resortFormModal').addEventListener('hidden.bs.modal', function () {
                                            document.getElementById('admin-resort-modals').innerHTML = '';
                                        });
                                    };

                                    // Room Modal (multipart POST/PUT to new backend endpoints, FormData with image files/urls)
                                    window.showRoomFormModal = function (room = {}, resortId = '') {
                                        const arr = v => Array.isArray(v) ? v.slice() : [];
                                        let amenities = arr(room.amenities);
                                        // images: [] of strings (URLs) or File objects (for upload)
                                        let images = arr(room.images);

                                        let html = `
        <div class="modal fade" id="roomFormModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <form id="roomForm" autocomplete="off" enctype="multipart/form-data">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">${room._id ? 'Edit Room' : 'Add Room'}</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body" style="max-height:70vh;overflow-y:auto;">
                        <input type="hidden" name="id" value="${room._id || ''}">
                        <input type="hidden" name="property" value="${room.property || resortId}">
                        <div class="mb-3">
                            <label><b>Room Number *</b></label>
                            <input type="text" name="roomNumber" class="form-control" maxlength="24" value="${room.roomNumber || ''}" required>
                        </div>
                        <div class="mb-3">
                            <label><b>Room Name/Title</b></label>
                            <input type="text" name="name" class="form-control" maxlength="50" value="${room.name || ''}">
                        </div>
                        <div class="mb-3">
                            <label><b>Type</b></label>
                            <select name="roomType" class="form-select">
                                <option value="Standard" ${room.roomType === "Standard" ? 'selected' : ''}>Standard</option>
                                <option value="Deluxe" ${room.roomType === "Deluxe" ? 'selected' : ''}>Deluxe</option>
                                <option value="Suite" ${room.roomType === "Suite" ? 'selected' : ''}>Suite</option>
                                <option value="Suite" ${room.roomType && room.roomType !== "Standard" && room.roomType !== "Deluxe" && room.roomType !== "Suite" ? 'selected' : ''}>Other</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label><b>Bed Type</b></label>
                            <input type="text" name="bedType" class="form-control" maxlength="40" value="${room.bedType || ''}" placeholder="E.g. King, Queen, Twin">
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label><b>Capacity</b></label>
                                <input type="number" name="capacity" class="form-control" value="${room.capacity || 2}" min="1" max="20">
                            </div>
                            <div class="col-md-6 mb-3">
                                <label><b>Base Price Per Night *</b></label>
                                <input type="number" name="pricePerNight" class="form-control" value="${room.pricePerNight || 0}" min="0" required>
                            </div>
                        </div>
                        <div class="row">
        
                            <div class="col-md-6 mb-3">
                                <label><b>Current Status</b></label>
                                <select name="status" class="form-select">
                                    <option value="Available" ${room.status === "Available" ? 'selected' : ''}>Available</option>
                                    <option value="Booked" ${room.status === "Booked" ? 'selected' : ''}>Booked</option>
                                    <option value="Maintenance" ${room.status === "Maintenance" ? 'selected' : ''}>Maintenance</option>
                                </select>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label><b>Room Description</b></label>
                            <textarea name="description" class="form-control" rows="2" maxlength="400">${room.description || ''}</textarea>
                        </div>
                        <div class="mb-3">
                            <label><b>Room Images</b></label>
                            <div id="image-list-box-room" class="mb-2"></div>
                            <div class="input-group mb-2 gap-2" style="flex-wrap:nowrap">
                                <input type="file" class="form-control" id="room-image-file-input" multiple accept="image/*">
                            </div>
                            <div class="text-tiny text-muted mt-1">Upload images (drag to arrange, max 10)</div>
                        </div>
                        <div class="mb-3">
                            <label><b>Room Amenities
                                <button class="btn btn-xs btn-success ms-1 py-0 px-1" type="button" id="add-room-amenity-btn">
                                    <i class="icon-plus"></i><span style="font-size:90%">Add</span>
                                </button>
                            </b></label>
                            <div id="room-amenities-list" class="mb-1"></div>
                            <div class="input-group mt-1">
                                <input type="text" class="form-control" id="room-amenity-input" placeholder="Type amenity and click +">
                                <button class="btn btn-primary" type="button" id="add-room-amenity-input-btn"><b>+</b></button>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label><b>Extra Bed Price</b></label>
                            <input type="number" name="extraBedPrice" class="form-control" value="${room.extraBedPrice || ''}" min="0" placeholder="If applicable">
                        </div>
                       
                      
                        <div class="mb-3">
                            <label><b>Max Occupants/Guests</b></label>
                            <input type="number" name="maxOccupants" class="form-control" min="1" max="30" value="${room.maxOccupants != null ? room.maxOccupants : ''}">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button id="roomFormSubmitBtn" type="submit" class="btn btn-primary">${room._id ? 'Update' : 'Create'}</button>
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                        <span id="roomFormLoading" style="display:none;margin-left:8px;">
                            <span class="spinner-border spinner-border-sm align-middle" role="status" aria-hidden="true"></span>
                            <span class="ms-1 align-middle">Processing...</span>
                        </span>
                    </div>
                </div>
            </form></div>
        </div>
        `;

                                        document.getElementById('admin-resort-modals').innerHTML = html;
                                        var roomModal = new bootstrap.Modal(document.getElementById('roomFormModal'));
                                        roomModal.show();

                                        // Room images logic: image[] is either URL string or File. 
                                        function renderRoomImages() {
                                            const wrap = document.getElementById('image-list-box-room');
                                            if (!wrap) return;
                                            wrap.innerHTML = images.length === 0 ? '<div class="text-tiny text-muted">No images added.</div>' : '';
                                            images.forEach((img, idx) => {
                                                let src = '';
                                                if (typeof img === 'string') src = img;
                                                else if (img instanceof File) src = img.__previewDataUrl || '';
                                                else if (img && typeof img === 'object' && img.preview) src = img.preview;
                                                wrap.innerHTML += `
                                                    <div class="d-flex align-items-center mb-2 resort-img-item" style="gap:7px" draggable="true" data-idx="${idx}">
                                                        <img src="${src}" style="width:50px;height:38px;object-fit:cover; border-radius:4px;border:1px solid #ddd;">
                                                        <div>
                                                            <button class="btn btn-xs btn-light move-img-up-room" data-idx="${idx}" title="Move up"><i class="icon-arrow-up"></i></button>
                                                            <button class="btn btn-xs btn-light move-img-down-room" data-idx="${idx}" title="Move down"><i class="icon-arrow-down"></i></button>
                                                            <button class="btn btn-xs btn-danger remove-image-room" data-idx="${idx}" title="Remove"><i class="icon-trash"></i></button>
                                                        </div>
                                                    </div>
                                                `;
                                            });
                                            // Drag-drop
                                            Array.from(wrap.querySelectorAll('.resort-img-item')).forEach(el => {
                                                el.ondragstart = function (e) { e.dataTransfer.setData("room-image-drag", el.dataset.idx);}
                                                el.ondragover = function (e) { e.preventDefault(); };
                                                el.ondrop = function (e) {
                                                    e.preventDefault();
                                                    let from = Number(e.dataTransfer.getData("room-image-drag"));
                                                    let to = Number(el.dataset.idx);
                                                    if (from !== to) {
                                                        let temp = images[from];
                                                        images.splice(from, 1);
                                                        images.splice(to, 0, temp);
                                                        renderRoomImages();
                                                    }
                                                }
                                            });
                                            // Up/down/remove
                                            wrap.querySelectorAll('.move-img-up-room').forEach(btn => {
                                                btn.onclick = () => {
                                                    let i = Number(btn.dataset.idx);
                                                    if (i > 0) [images[i - 1], images[i]] = [images[i], images[i - 1]];
                                                    renderRoomImages();
                                                }
                                            });
                                            wrap.querySelectorAll('.move-img-down-room').forEach(btn => {
                                                btn.onclick = () => {
                                                    let i = Number(btn.dataset.idx);
                                                    if (i < images.length - 1) [images[i], images[i + 1]] = [images[i + 1], images[i]];
                                                    renderRoomImages();
                                                }
                                            });
                                            wrap.querySelectorAll('.remove-image-room').forEach(btn => {
                                                btn.onclick = () => { images.splice(Number(btn.dataset.idx), 1); renderRoomImages(); };
                                            });
                                        }

                                        // On image input: process File as preview, push to images[]
                                        document.getElementById('room-image-file-input').addEventListener('change', function () {
                                            let files = Array.from(this.files || []);
                                            let totalCount = files.length + images.filter(img => typeof img !== 'object' || img instanceof File || img.preview).length;
                                            if (totalCount > 10) {
                                                alert("A maximum of 10 images allowed.");
                                                return;
                                            }
                                            let pending = files.length;
                                            files.forEach(file => {
                                                if (!file.type.startsWith('image/')) {
                                                    pending--;
                                                    if (pending === 0) renderRoomImages();
                                                    return;
                                                }
                                                file.__previewDataUrl = "";
                                                let reader = new FileReader();
                                                reader.onload = function (e) {
                                                    file.__previewDataUrl = e.target.result;
                                                    images.push(file);
                                                    pending--;
                                                    if (pending === 0) renderRoomImages();
                                                };
                                                reader.readAsDataURL(file);
                                            });
                                            if (!files.length) renderRoomImages();
                                            this.value = "";
                                        });

                                        // Room amenities
                                        function renderRoomAmenities() {
                                            let out = amenities.length === 0 ? '<span class="badge bg-light text-muted text-tiny me-1">No amenities yet</span>' : '';
                                            amenities.forEach((a, i) => {
                                                out += `<span class="badge rounded-pill bg-success-subtle text-success me-1 mb-1">
                    ${a}
                    <button type="button" class="btn-close ms-1 remove-room-amenity-btn" data-idx="${i}" title="Remove"></button>
                    </span>`;
                                            });
                                            document.getElementById('room-amenities-list').innerHTML = out;
                                            document.querySelectorAll('.remove-room-amenity-btn').forEach(btn => {
                                                btn.onclick = () => { amenities.splice(Number(btn.dataset.idx), 1); renderRoomAmenities(); }
                                            });
                                        }
                                        function focusRoomAmenityInput() { document.getElementById('room-amenity-input').focus();}
                                        document.getElementById('add-room-amenity-btn').onclick = focusRoomAmenityInput;
                                        document.getElementById('add-room-amenity-input-btn').onclick = function () {
                                            let val = document.getElementById('room-amenity-input').value.trim();
                                            if (val) {
                                                amenities.push(val);
                                                document.getElementById('room-amenity-input').value = '';
                                                renderRoomAmenities();
                                                focusRoomAmenityInput();
                                            }
                                        };
                                        document.getElementById('room-amenity-input').addEventListener('keydown', function (e) {
                                            if (e.key === 'Enter') { e.preventDefault(); document.getElementById('add-room-amenity-input-btn').click(); }
                                        });
                                        renderRoomImages(); renderRoomAmenities();

                                        // Submit room form as multipart, append images (File or string), amenities array, etc.
                                        document.getElementById('roomForm').onsubmit = function (e) {
                                            e.preventDefault();
                                            var submitBtn = document.getElementById('roomFormSubmitBtn');
                                            var loadingSpan = document.getElementById('roomFormLoading');
                                            if (submitBtn) submitBtn.disabled = true;
                                            if (loadingSpan) loadingSpan.style.display = '';

                                            let fd = new FormData();
                                            // Fill all named inputs (except files)
                                            Array.from(this.elements).forEach(inp => {
                                                if (inp.name && inp.type !== 'file') {
                                                    fd.append(inp.name, inp.value);
                                                }
                                            });
                                            // amenities
                                            amenities.forEach(a => fd.append('amenities', a));
                                            // images: only max 10
                                            let pushed = 0;
                                            for (let j = 0; j < images.length && pushed < 10; ++j) {
                                                let img = images[j];
                                                if (img instanceof File) fd.append('images', img);
                                                else if (typeof img === 'string') fd.append('existingImages', img);
                                                pushed++;
                                            }
                                            // compose endpoint/verb
                                            let reqType = room._id ? 'PUT' : 'POST';
                                            let url = room._id ? `/resort/room/${room._id}` : '/resort/room';
                                            fetch(url, {
                                                method: reqType,
                                                body: fd
                                            })
                                            .then(async r => {
                                                if (r.ok) { roomModal.hide(); location.reload(); }
                                                else {
                                                    let data;
                                                    try { data = await r.json(); alert('Error: ' + (data.message || r.status)); }
                                                    catch { alert('Error: ' + r.status); }
                                                }
                                            })
                                            .catch(ex => alert('Error: ' + (ex.message || '')))
                                            .finally(() => {
                                                if (submitBtn) submitBtn.disabled = false;
                                                if (loadingSpan) loadingSpan.style.display = 'none';
                                            });
                                        };
                                        document.getElementById('roomFormModal').addEventListener('hidden.bs.modal', function () {
                                            document.getElementById('admin-resort-modals').innerHTML = '';
                                        });
                                    };

                                })();
                            </script>
                            <!-- /main-content-wrap -->
                        </div>
                        <!-- /main-content-wrap -->
                        <!-- bottom-page -->
                        <div class="bottom-page">
                            <div class="body-text">Copyright © 2025 <a href="">Transha Stayss</a>.
                                Design by Trivlogic Private Limited All rights reserved</div>
                        </div>
                        <!-- /bottom-page -->
                    </div>
                    <!-- /main-content -->
                </div>
                <!-- /section-content-right -->
            </div>
            <!-- /layout-wrap -->
        </div>
        <!-- /#page -->
    </div>
    <!-- /#wrapper -->

    <!-- <script>
        function updateLimit(select) {
            const limit = select.value;
            const url = new URL(window.location);
            url.searchParams.set('limit', limit);
            window.location.href = url.toString();
        }
    </script> -->
    <!-- Javascript -->
    <script src="admin-js/jquery.min.js"></script>
    <script src="admin-js/bootstrap.min.js"></script>
    <script src="admin-js/bootstrap-select.min.js"></script>
    <script src="admin-js/zoom.js"></script>
    <script src="admin-js/switcher.js"></script>
    <script defer src="admin-js/theme-settings.js"></script>
    <script defer src="admin-js/main.js"></script>

</body>

</html>